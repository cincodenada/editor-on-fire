EOF proposed file format (revision 'H'):

	FILE HEADER:
8 bytes:	'E','O','F','S','O','N','H','\0'
8 bytes:	(padding)

	CHART PROPERTIES:
4 bytes:	Project revision number
*1 byte:	Timing format (0=Milliseconds,1=Deltas)
*4 bytes:	Time division (only to be used if the timing format is "deltas", will probably be informational unless EOF changes the time division used)

	SONG PROPERTIES:
*2 bytes:	Album string length
*[varies]:	Album string
2 bytes:	Artist string length
[varies]:	Artist string
2 bytes:	Title string length
[varies]:	Title string
2 bytes:	Frettist string length
[varies]:	Frettist string
*2 bytes:	Genre string length
*[varies]:	Genre string
2 bytes:	Year string length
[varies]:	Year string
2 bytes:	Loading Text string length
[varies]:	Loading Text string
1 byte:		Boolean:  Lyrics present (from Song Properties)
1 byte:		Boolean:  Eighth note HOPO (from Song Properties)
*3 bytes:	Cassette color (8 bit intensity each for Red, Green and Blue)
*1 byte:	Band difficulty level (0-6)
*1 byte:	Bass difficulty level (0-6)
*1 byte:	Drums difficulty level (0-6)
*1 byte:	Guitar difficulty level (0-6)
*1 byte:	Vocal difficulty level (0-6)
	*FoFiX doesn't reportedly support a vocal difficulty value yet
*1 byte:	Force FoFiX to use the chart's background.png as the background
*1 byte:	HOPO frequency (0-5, requires the user's "Song HOPO Freq" FoFiX setting to be set to "Auto")
*1 byte:	Icon ID string length
*[varies]:	Icon ID string (The following are supportedly natively in FoFiX: rb1,rb2,rbdlc,rbtpk,gh1,gh2,gh2dlc,gh3,gh3dlc,gh80s,gha,ghm,ph1,ph2,ph3,ph4,phm.  Custom icon strings can be used in FoFiX.)
*1 byte:	Boolean:  The song audio is a cover version
*1 byte:	Boolean:  The chart is a tutorial and should be hidden during quickplay in FoFiX
*1 byte:	Unlock ID string length
*[varies]:	Unlock ID string (The tier this chart is in)
*1 byte:	Unlock ID required string length
*[varies]:	Unlock ID required string (The tier that needs to be finished for this chart to be unlocked)
*1 byte:	Unlock text string length
*[varies]:	Unlock text string (The text that FoFiX will display if this chart is not unlocked)
*4 bytes:	User specified chart version number

2 bytes:	Number of OGG profiles
OGG PROFILE CHUNK, for each OGG profile:
{
*	2 bytes:	OGG file name string length
	[varies:]	OGG file name string
	4 bytes:	MIDI delay for this profile (milliseconds)
*	1 byte:		OGG profile flags (such as whether the file was originally provided as an OGG or if it was re-encoded)
}

2 bytes:	Number of INI settings
INI SETTING CHUNK, for each INI setting:
{
*	2 bytes:	INI setting string length
*	[varies:]	INI setting string
}

*4 bytes:	Time division (ticks per quarter note)
4 bytes:	Number of beats in the chart
BEAT CHUNK, for each beat:
{
	4 bytes:	PPQN
	4 bytes:	Position (in milliseconds or delta ticks)
	4 bytes:	Beat flags
}

4 bytes:	Number of text events
TEXT EVENT CHUNK, for each text event:
{
*	2 bytes:	Text event string length
*	[varies:]	Text event string
	4 bytes:	Associated beat number
}

*4 bytes:	Start position of preview audio (in milliseconds or delta ticks)
*4 bytes:	End position of preview audio (in milliseconds or delta ticks)
	*If the user has not defined the preview.ogg start and end points, these two values should be 0

*4 bytes:	Number of tracks
TRACK CHUNK, for each track:
{
*	2 bytes:	Track name string length
*	[varies:]	Track name string
*	4 byte:		Track number (Matching macros such as EOF_TRACK_GUITAR)
*	1 byte:		Track type (1=Guitar/Drum,3=Vocal,4=Pro Guitar,5=Pro Drum,6=Keys, ...)
*	4 byte:		Track flags (ie. which difficulties are locked for editing)

	[GUITAR/DRUM AND PRO DRUM TRACK FORMAT]
*		4 bytes:	Number of solo sections
		SOLO SECTION CHUNK, for each solo section
		{
			4 bytes:	Start position of solo section (in milliseconds or delta ticks)
			4 bytes:	End position of solo section (in milliseconds or delta ticks)
		}

*		4 bytes:	Number of star power sections
		STAR POWER CHUNK, for each star power section
		{
			4 bytes:	Start position of star power section (in milliseconds or delta ticks)
			4 bytes:	End position of star power section (in milliseconds or delta ticks)
		}

		4 bytes:	Number of notes
		NOTE CHUNK, for each note
		{
*			2 bytes:	Note name string length
*			[varies:]	Note name string
			1 byte:		Note type (difficulty)
			1 byte:		Note bitflag (fret on/off statuses)
			4 bytes:	Note position (in milliseconds or delta ticks)
			4 bytes:	Note length (in milliseconds or delta ticks)
			1 byte:		Note flags
		}

	[VOCAL TRACK FORMAT]
*		1 byte:		Rock Band compliance flag (1=compliant, not using pitches outside the allowed range of [36,84])
*		1 byte:		Tone set number (ie. 0=Grand Piano, 1=MIDI device, ...)
		4 bytes:	Number of lyrics
		LYRIC CHUNK, for each lyric:
		{
*			2 bytes:	Lyric text string length
*			[varies:]	Lyric text string
			1 byte:		Note pitch
			4 bytes:	Lyric position (in milliseconds or delta ticks)
			4 bytes:	Lyric position (in milliseconds or delta ticks)
		}

		4 bytes:	Number of lyric phrases
		LYRIC PHRASE CHUNK, for each lyric phrase
		{
			4 bytes:	Start position of lyric phrase (in milliseconds or delta ticks)
			4 bytes:	End position of lyric phrase (in milliseconds or delta ticks)
*			1 bytes:	Lyric phrase flags (8 flags should be enough, there aren't many phrase types)
		}

	[PRO GUITAR TRACK FORMAT]
*		1 byte:		Rock Band compliance flag (1=compliant, presumably that the chart doesn't use any fret higher than 17)
*		4 bytes:	Number of solo sections
*		SOLO SECTION CHUNK, for each solo section
*		{
*			4 bytes:	Start position of solo section (in milliseconds or delta ticks)
*			4 bytes:	End position of solo section (in milliseconds or delta ticks)
*		}

*		4 bytes:	Number of star power sections
*		STAR POWER CHUNK, for each star power section
*		{
*			4 bytes:	Start position of star power section (in milliseconds or delta ticks)
*			4 bytes:	End position of star power section (in milliseconds or delta ticks)
*		}

*		4 bytes:	Number of arpeggio sections
*		ARPEGGIO CHUNK, for each arpeggio section
*		{
*			4 bytes:	Start position of the arpeggio section (in milliseconds or delta ticks)
*			4 bytes:	End position of the arpeggio section (in milliseconds or delta ticks)
*		}

*		4 bytes:	Number of notes
*		PRO GUITAR NOTE CHUNK, for each note
*		{
*			2 bytes:	Note name string length
*			[varies:]	Note name string
*			1 byte:		Note type (difficulty)
*			2 bytes:	Note bitflag (string use statuses: set=played, reset=not played)
!				*Bit 0 refers to string 1 (high E), bit 5 refers to string 6 (low E), consistent with guitar terminology
*			FRET CHUNK, for each set bit in the guitar note bitflag
*			{
*				1 byte:		Fret # tab (0=Open strum, #=Fret # pressed)
*			}
*			4 bytes:	Note position (in milliseconds or delta ticks)
*			4 bytes:	Note length (in milliseconds or delta ticks)
*			4 byte:		Note flags (allow 32 flags for an unforsee-able number of techniques such as tapping, bending, etc)
*		}

	[KEYS TRACK FORMAT]
*		1 byte:		Rock Band compliance flag (1=compliant, the chart doesn't use notes outside the currently unknown accepted range)
*		1 byte:		Tone set number (ie. 0=Grand Piano, 1=MIDI device, ...)
*		4 bytes:	Number of solo sections
*		SOLO SECTION CHUNK, for each solo section
*		{
*			4 bytes:	Start position of solo section (in milliseconds or delta ticks)
*			4 bytes:	End position of solo section (in milliseconds or delta ticks)
*		}

*		4 bytes:	Number of star power sections
*		STAR POWER CHUNK, for each star power section
*		{
*			4 bytes:	Start position of star power section (in milliseconds or delta ticks)
*			4 bytes:	End position of star power section (in milliseconds or delta ticks)
*		}

*		4 bytes:	Number of notes
*		KEY NOTE CHUNK, for each note
*		{
*			2 bytes:	Chord name string length
*			[varies:]	Chord name string
*			1 byte:		Note type (difficulty)
*			1 byte:		Chord hand (1=right hand- ie. melody, 2=left hand- ie. chords)
				*Rock Band 3 won't support two hand keys tracks, so this would be a feature for other games such as Synthesia/Doremi Mania)
*			1 byte:		Number of keys played in this note/chord
*			KEY CHORD CHUNK, for each key in the chord
*			{
*				1 byte:		Note number
*				1 byte:		Note velocity
*			}

*			4 bytes:	Note position (in milliseconds or delta ticks)
*			4 bytes:	Note length (in milliseconds or delta ticks)
*			1 byte:		Note flags
*		}
}

*1 bytes:	Number of bookmarks
BOOKMARK CHUNK, for each of the bookmarks:
{
	4 bytes:	Bookmark position (in milliseconds or delta ticks)
}

4 bytes:	Number of catalog entries
FRET CATALOG CHUNK, for each catalog entry:
{
*	2 bytes:	Entry name string length
*	[varies:]	Entry name string
*	4 byte:		Track number (matching the track number in the track chunk)
	1 byte:		Entry type (difficulty)
	4 byte:		Start position of entry (in milliseconds or delta ticks)
	4 byte:		End position of entry (in milliseconds or delta ticks)
}
